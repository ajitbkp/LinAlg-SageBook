<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-echelon-form" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Echelon Forms</title>
<introduction>
    <p>
        In this section we define the row echelon form of matrices its useful to deal with various concepts related to 
        matrices. We shall see how Sage can be used to convert any matrix to its row-echelon form.
    </p>
</introduction>
<subsection xml:id="sec-row-echelon">
    <title>Row Echelon Form</title>
    
    <definition xml:id="def-echelon-form">
    An <m>m \times n</m> matrix <m>A</m> is said to be in <alert>row-echelon form</alert> 
    or <alert>row-echelon matrix</alert> if it satisfies the following conditions:
    <ol>
        <li>
            <p>
                All zero rows (consisting entirely of zeros) are at the bottom.        
            </p>
        </li>
        <li>
            <p>
                The first nonzero entry from the left in each nonzero row is a 1, called 
                the <alert>leading</alert> 1 or <alert>pivot </alert> element  for that 
                row. Row containing pivot elements are called the pivot row and the columns
                containing the pivot element are called the pivot columns.  
            </p>
        </li>
        <li>
            <p>
                Each leading 1 is to the right of all leading 1s in the rows above it. 
            </p>
        </li>
            A row-echelon matrix is said to be in <alert>reduced row-echelon form</alert>  or <alert>reduced row-echelon matrix</alert> if, in addition, it satisfies the following condition: 
        <li>
            <p>
                Each leading 1 is the only nonzero entry in its column.       
            </p>
        </li>
    </ol>
</definition>	

<p>
<example xml:id="eg-echelon-matrices"><title>Echelon Matrices</title>
<p>

    Following are examples of echelon matrices:
    <me> \begin{pmatrix}
		1 \amp  2 \amp  4 \\
		0 \amp  1 \amp  -5 \\
		0 \amp  0 \amp  0
	\end{pmatrix},
	\begin{pmatrix}
		1\amp   3  \amp  6   \amp  8   \amp    0  \\
		0\amp   0  \amp   1  \amp   9  \amp    1  \\
		0\amp   0  \amp   0  \amp   1  \amp   -1  \\
	\end{pmatrix},
	\begin{pmatrix}
		1\amp   0  \amp   3  \amp   4    \\
		0\amp   1  \amp   2  \amp   1    \\
		0\amp   0  \amp   1  \amp   4   \\
		0 \amp  0 \amp  0 \amp  1
	\end{pmatrix}
    </me>.
</p>
</example>
</p>

<p>
    <example xml:id="eg-non-echelon-matrices"><title>Non Echelon Matrices</title>
    
    <p>
        Following are examples of some non echelon matrices:
        <me> 
            \begin{pmatrix} 
                1\amp   3  \amp  6   \amp  8   \amp    0  \\
                0\amp   0  \amp   1  \amp   9  \amp    1  \\
                0\amp   1  \amp   0  \amp   1  \amp   -1  \\
            \end{pmatrix} , \quad 
            \begin{pmatrix} 
                0\amp   1  \amp  6   \amp  8   \amp    0  \\
                0\amp   1  \amp   1  \amp   9  \amp    1  \\
                0\amp   1  \amp   0  \amp   1  \amp   -1  \\
            \end{pmatrix} , \quad 
            \begin{pmatrix}
                1  \amp  6   \amp  8   \amp    0  \\
                0  \amp   5  \amp   9  \amp    1  \\
                0  \amp   0  \amp   1  \amp   -1  \\
            \end{pmatrix}</me>.
        </p>
    </example>
    </p>
    <p>
        Every nonzero <m>m \times n</m> matrix <m>A</m> is row equivalent to a matrix which is a row echelon matrix.
We employ the following procedures to convert a matrix into a row echelon form:
<ol>
    <li>
        <p>
            Choose a pivot element from the nonzero entries in the 1st  column. Row containing pivot is called the pivot row.     
        </p>
    </li>
    <li>
        <p>
            Interchange rows (if necessary) so that pivot row is the new 1st row.
        </p>
    </li>
    <li>
        <p>
            Multiply pivot row by a constant so that the new pivot is 1.
        </p>
    </li>
    <li>
        <p>
            Make all subsequent entries in the 1st column 0 by using elementary row operations.
        </p>
    </li>
    <li>
        <p>
            Repeat this process with next column.
        </p>
    </li>
</ol>
    </p>

    <example>
     <p>
        Reduce the matrix 
        <m> A=\begin{pmatrix}1\amp  2   \amp  4    \\
            1\amp   0  \amp  2    \\
            2\amp    4 \amp   1  
            \end{pmatrix}</m>  to row echelon form.
        </p>
</example>

<solution>
    <p>
       <m>   \begin{pmatrix}
                    1\amp  2   \amp  4    \\
                    1\amp   0  \amp  2    \\
                    2\amp    4 \amp   1   \\
                \end{pmatrix}
                \xrightarrow{
                    \begin{array}{c}
                        R_2\to R_2-R_1   \\  R_3\to R_3-2R_1   \\
                \end{array}}
                \begin{pmatrix}
                    1\amp    2    \amp    4   \amp    \\
                    0\amp   -2    \amp   -2   \amp  \\
                    0\amp    0    \amp   -7   \amp  \\
                \end{pmatrix}
                \xrightarrow{\begin{array}{c}  R_1\to\frac{-1}{7}R_1   \\
                        R_2\to\frac{-1}{2}R_2   \\
                \end{array}}
                \begin{pmatrix}
                    1\amp   2   \amp   4      \\
                    0\amp   1   \amp   1   \\
                    0\amp   0   \amp   1  
                \end{pmatrix}</m> 
                               
                This <m> \begin{pmatrix}
                    1\amp   2   \amp   4      \\
                    0\amp   1   \amp   1   \\
                    0\amp   0   \amp   1  
                \end{pmatrix}</m>  is row-echelon matrix equivalent to <m> A</m> .  
            We can apply elementary row operation and make it to reduced-row-echelon  form. 
                <me>
                \begin{pmatrix}
                    1\amp   2   \amp   4      \\
                    0\amp   1   \amp   1   \\
                    0\amp   0   \amp   1  
                \end{pmatrix}\xrightarrow{
                    \begin{array}{c}
                        R_2\to R_2-R_3 \\R_1\to R_1-4R_3\\R_1\to R_1-2R_2\\
                \end{array}}
                \begin{pmatrix}
                    1\amp   0   \amp   0      \\
                    0\amp   1   \amp   0   \\
                    0\amp   0   \amp   1  
                \end{pmatrix}
                </me>
      
            </p>
         </solution>
 <p>
    Sage has inbulit method `A.rref()' to convert the matrix into reduced row echelon form. 
    You may also try 'A.echelonize()' and 'A.echelon_form()'
    
    <sage>
        <input>
            A = matrix(QQ,[[1,2,4],[1,0,2],[2,4,1]])
        </input>
        <output>
       
        </output>
    </sage>
    <p>
        <sage>
            <input>
                A.rref()
            </input>
            <output>
                [1 0 0]
                [0 1 0]
                [0 0 1]
        
            </output>
        </sage>
    </p>
 </p>
   
 <p>
    <alert>Step by Step method to find RREF of a matrix </alert>
 </p>
 <sage>
    <input>
        #A=matrix(QQ, [[0,-2,1],[6, -0, 3],[4, 1, 8],[14, 10, -8]])
        A=matrix(QQ, [[3,-2,1,2],[6, 0,-1, 3],[4, 1,2, 8]])
        m = A.nrows()
        n = A.ncols()
        print( 'The original matrix is')
        print(A)
        #### Forward Steps
        for k in range(0,m-1):
                #if A[k,k] == 0:
                listA = [(abs(A[j,k]),j) for j in range(k,m)]
                maxv, pivot = max(listA)
                if(maxv!=abs(A[k,k])):    
                    A[pivot,:],A[k,:]=A[k,:],A[pivot,:]
                    print('We permute rows %d and %d'%(k+1,pivot+1))
                    print(A)
                ## Making all entries below the pivot zero
                for i in range(k+1,m):
                    a=A[k,k]
                    if A[i,k] != 0:
                        print( "We add %s times row %d to row %d"%(-A[i,k]/a, k+1, i+1))
                        A=A.with_added_multiple_of_row(i,k,-A[i,k]/a)
                        print(A)
        print('\n ########### End of forward steps ######\n ')
        ### Backward Steps
        r =min(m,n)
        
        for k in range(r-1,-1,-1):
                for i in range(k-1,-1,-1):
                    a=A[k,k]
                    if A[i,k]!=0:
                        print ("We add %s times row %d to the row %d"%(-A[i,k]/a, k+1, i+1))
                        A=A.with_added_multiple_of_row(i,k,-A[i,k]/a)
                        print(A)
        
        print('\n ########### End of backward steps ######\n ')
        ## Making leading element 1
        r = min(m,n)
        for i in range(0,r):
                if A[i,i]!=1:
                    print( 'We divide row %d by %s'%(i+1,A[i,i]))
                    A = A.with_rescaled_row(i,1/A[i,i])
                    print(A)
               
    </input>
    <output>
        
    </output>
 </sage>

</subsection>

<subsection xml:id="subsec-Gaussian-Elimination">
    <title>Gaussian Elimination Method</title>
    <p>
        Solving a system of linear equations <m>AX = B</m>, by reducing the
augmented matrix <m> A^*= [A,B]</m> to echelon form by using elementary row
operations
and then solving the equivalent system by back substitution is
called solving by <alert>Gaussian elimination</alert> process.

Now we state the step involved in the Gaussian elimination process. Only use the row operations stated
above and work from top to bottom.
    </p>
 <algorithm xml:id="alg-gaussian-elimination"><title>Gaussian Elimination</title>
 
 
    <ol>
        <li>
            <p>
                Make in each row the first non-zero element (called the main
	element) equal to 1.
            </p>
        </li>
        <li>
            <p>
                Make all elements under this main element equal to zero.
	If one row becomes a zero row shift it to the bottom.
	            </p>
        </li>
        <li>
            <p>
                If there comes a row composed of zeroes except for the
	last element, then stop. The system has no solution.
            </p>
        </li>
    </ol>
    <statement>
        <p>
            
        </p>
    </statement>
 </algorithm>   

 <example xml:id="row-echelon-eg1">
    <p>
        Solve the following system of
		linear equations using the Gaussian elimination method.
		<md>
        <mrow> 	x+2y+4z \amp   = 3 </mrow>
		<mrow>	x+2z   \amp =    0 </mrow>
		<mrow>	2x+4y+z \amp  = 3   </mrow>
    </md>
    </p>
    <solution>
        <p>
            The corresponding augmented matrix is
	<me>A^* =  [A~|~B]= \begin{pmatrix}
		1\amp  2   \amp  4   \amp   |  \amp  3   \\
		1\amp   0  \amp  2   \amp    |  \amp  0   \\
		2\amp    4 \amp   1  \amp    |  \amp   3  \\
	\end{pmatrix}</me>
        </p>

        <p>
        	<md> <mrow>\begin{pmatrix}
                1\amp  2   \amp  4   \amp   |  \amp  3   \\
                1\amp   0  \amp  2   \amp    |  \amp  0   \\
                2\amp    4 \amp   1  \amp    |  \amp   3  \\
            \end{pmatrix} \amp
            \xrightarrow{
                \begin{array}{c}
                    R_2-R_1   \\  R_3-2R_1   \\
            \end{array}} 
            \begin{pmatrix}
                1\amp    2    \amp    4   \amp    |  \amp    3   \\
                0\amp   -2    \amp   -2   \amp    |  \amp   -3   \\
                0\amp    0    \amp   -7   \amp    |  \amp   -3   \\
            \end{pmatrix} </mrow>
            <mrow> \amp \xrightarrow{ \begin{array}{c}  \frac{-1}{7}R_1   \\
                    \frac{-1}{2}R_2   \\
            \end{array}}
            \begin{pmatrix}
                1\amp   2   \amp   4   \amp    |  \amp    3   \\
                0\amp   1   \amp   1   \amp    |  \amp   3/2   \\
                0\amp   0   \amp   1   \amp    |  \amp   3/7   \\
            \end{pmatrix}</mrow>
            </md>
        </p>
        <p> 
            We can do more step of row elimination to convert the first three columns into identity matrix. 
            However, the above augmented matrix represents the following equations:
	<me>
	x+2y+4z=3;\quad y+z=3/2;\quad z=3/7.
	</me>
	Using back substitution, we get  
<me> x=-6/7, y=15/14, z=3/7</me>.
        </p>
        </solution>
 <sage>
    <input>
    A = matrix(QQ,[[1,2,4],[1,0,2],[2,4,1]])
    b = vector(QQ,[3,0,3])
    Aug = A.augment(b,subdivide=True)
    Aug
    </input>
    <output>
        [1 2 4|3]
        [1 0 2|0]
        [2 4 1|3]
    </output>
 </sage>
 <p>
    <sage>
        <input>
        Aug.rref()
        </input>
        <output>
            [    1     0     0| -6/7]
            [    0     1     0|15/14]
            [    0     0     1|  3/7]
        </output>
    </sage>
 </p>
    </example>
<example xml:id="row-echelon-eg2">
    <p>
    Solve the following system of linear
    equations.
<md>
<mrow>	x+y+z-w \amp    =  1   </mrow>
<mrow>	y-z+w \amp    =  -1   </mrow>
<mrow>	3x+6z-6w \amp   =   6   </mrow>
<mrow>	-y+z-w \amp   =   1   </mrow>
</md>
using Gaussian elimination method. Show that this system has infinitely many solutions.
</p>
<p>
    <solution>
        <p>
            <sage>
                <input>
            A = matrix(QQ,[[1,1,1,-1],
              [0,1,-1,1],
              [2,0,6,-6],
              [0,-1,1,-1]])
b = vector(QQ,[1,-1,6,1])
Aug = A.augment(b,subdivide=True)
Aug
                </input>
                <output>
                    1  1  1 -1| 1]
                    [ 0  1 -1  1|-1]
                    [ 2  0  6 -6| 6]
                    [ 0 -1  1 -1| 1]
                </output>
            </sage>
        </p>
        <p>
            <sage>
                <input>
                    Aug.rref()
                </input>
                <output>
                    [ 1  0  0  0| 0]
                    [ 0  1  0  0| 0]
                    [ 0  0  1 -1| 1]
                    [ 0  0  0  0| 0]
                </output>
            </sage>
        </p>
    Since last row zero, it represents the equation <m>0=0</m>, 
    in particular, one can eliminate one of the variables. Hence the system has infinitely many solutions.
    </solution>
</p>
</example>
<p>
    <example>
        <p>
        Solve the following system using the Gaussian elimination method and show that it has no solution.
<md>
<mrow> 	x+3y \amp   =  1   </mrow>
<mrow>	2x+y \amp  =  -3   </mrow>
<mrow>	2x+2y \amp  =   0   </mrow>
</md>
</p>
    </example>
</p>
<solution>
    <p>
        <sage>
            <input>
            A = matrix([[1,3],[2,1],[2,2]])
            b = vector([1,-3,0])
            Aug = A.augment(b, subdivide=True)
            Aug
            </input>
            <output>
                [ 1  3| 1]
                [ 2  1|-3]
                [ 2  2| 0]    
            </output>
        </sage>
    </p>
    <p>
        <sage>
            <input>
            Aug.rref()
            </input>
            <output>
                [1 0|0]
                [0 1|0]
                [0 0|1] 
            </output>
        </sage>
    </p>
    <p>
        Since last row represents the equation <m>0=1</m>, the system has no solution.
    </p>
</solution>
</subsection>
    
<subsection xml:id="subsec-Gauss-Jordan-Method">
    <title>Gauss-Jordan elimination method</title>
    <p>
    Guass-Jordan method of solving the linear system <m>AX=B</m> is very similar to that of the Gaussian 
elimination method. In this method we continue the the row elimination till we reduce the 
row-reduced matrix of <m>A</m> to identity matrix.
    </p>

    <p>
        <example> 
            <p> Solve the system <m>Ax=b</m>  using the Gauss-Jordan elimination method, where
                       <me> A= \begin{pmatrix} 1\amp 0\amp 5\amp 0\\-1\amp 4\amp 1\amp 0\\3\amp 0\amp 4\amp 1\\-2\amp 1\amp 1\amp 3 \end{pmatrix} \text{ and } 
                b=\begin{pmatrix}1\\4\\3\\5\end{pmatrix}
            </me>
                </p>
            <p>
                <sage>
                    <input>
                        A = matrix(QQ,[[1,0,5,0],[-1,4,1,0],[3,0,4,1],[-2,1,1,3]])
                        b = vector(QQ,[1,4,3,5])
                        Aug = A.augment(b, subdivide=True)
                        Aug.rref()
                    </input>
                    <output>
                        [      1       0       0       0|  11/34]
                        [      0       1       0       0|  89/85]
                        [      0       0       1       0| 23/170]
                        [      0       0       0       1|253/170]
                    </output>
                </sage>
            </p>
            <p>
                Clearly the solution of the above system is 
                <me>x_1=11/34, x_2 = 89/85, x_3 = 23/170, x_4=253/170</me>.
                We can also solve the above system using the 'A.solve_right(b)' command in Sage.
                <p>
                    <sage>
                        <input>
                            A.solve_right(b)
                        </input>
                        <output>
                            (11/34, 89/85, 23/170, 253/170)
                        </output>
                    </sage>
                </p>
            </p>

        </example>
    </p>
</subsection>
</section>
